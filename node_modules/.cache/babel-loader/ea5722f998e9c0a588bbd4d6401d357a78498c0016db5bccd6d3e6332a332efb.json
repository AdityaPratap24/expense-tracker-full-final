{"ast":null,"code":"var _jsxFileName = \"D:\\\\fjp 7\\\\sharpener\\\\et\\\\src\\\\Components\\\\Pages\\\\SignUp\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./SignUp.module.css\";\nimport Form from \"../../Layout/UI/Form\";\nimport Button from \"../../Layout/UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const emailRef = useRef(\"\");\n  const pswdRef = useRef(\"\");\n  const confirmPswdRef = useRef(\"\");\n  const [emailValid, setEmailValid] = useState(false);\n  const [pswdValid, setPswdValid] = useState(false);\n  const [confirmValid, setConfirmValid] = useState(false);\n  const history = useHistory();\n  const signUpSubmitHandler = async event => {\n    event.preventDefault();\n    const emailValue = emailRef.current.value;\n    const pswdValue = pswdRef.current.value;\n    const confirmPswdValue = confirmPswdRef.current.value;\n    if (emailValue.includes(\"@\") && emailValue.includes(\".\") && pswdValue.length > 5 && confirmPswdValue === pswdValue) {\n      setEmailValid(false);\n      setPswdValid(false);\n      setConfirmValid(false);\n      const response = await fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB7_MYIxXslBhdwbwg4vFCvLqF4rsOW3_o\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: emailValue,\n          password: confirmPswdValue,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log(data.email);\n        emailRef.current.value = \"\";\n        pswdRef.current.value = \"\";\n        confirmPswdRef.current.value = \"\";\n        history.replace(\"/signIn\");\n      } else {\n        alert(data.error.message);\n      }\n    } else {\n      if (!emailValue.includes(\"@\") || !emailValue.includes(\".\")) {\n        setEmailValid(true);\n      }\n      if (pswdValue.length < 5) {\n        setPswdValid(true);\n      }\n      if (confirmPswdValue !== pswdValue) {\n        setConfirmValid(true);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: signUpSubmitHandler,\n    className: classes.signUp,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"emailId\",\n        placeholder: \"Email\",\n        type: \"text\",\n        ref: emailRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), emailValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter Valid Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"passwordId\",\n        placeholder: \"Password\",\n        type: \"password\",\n        ref: pswdRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), pswdValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter Valid Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"confirmPwdId\",\n        placeholder: \"Confirm Password\",\n        type: \"password\",\n        ref: confirmPswdRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), confirmValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Match the Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"UYOszs2AkVXRZF1BSvWDOsfoZJc=\", false, function () {\n  return [useHistory];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useRef","useState","useHistory","classes","Form","Button","jsxDEV","_jsxDEV","SignUp","_s","emailRef","pswdRef","confirmPswdRef","emailValid","setEmailValid","pswdValid","setPswdValid","confirmValid","setConfirmValid","history","signUpSubmitHandler","event","preventDefault","emailValue","current","value","pswdValue","confirmPswdValue","includes","length","response","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","data","json","ok","console","log","replace","alert","error","message","onSubmit","className","signUp","children","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","type","ref","_c","$RefreshReg$"],"sources":["D:/fjp 7/sharpener/et/src/Components/Pages/SignUp/SignUp.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classes from \"./SignUp.module.css\";\r\nimport Form from \"../../Layout/UI/Form\";\r\nimport Button from \"../../Layout/UI/Button\";\r\n\r\nconst SignUp = () => {\r\n  const emailRef = useRef(\"\");\r\n  const pswdRef = useRef(\"\");\r\n  const confirmPswdRef = useRef(\"\");\r\n\r\n  const [emailValid, setEmailValid] = useState(false);\r\n  const [pswdValid, setPswdValid] = useState(false);\r\n  const [confirmValid, setConfirmValid] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const signUpSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const emailValue = emailRef.current.value;\r\n    const pswdValue = pswdRef.current.value;\r\n    const confirmPswdValue = confirmPswdRef.current.value;\r\n    if (\r\n      emailValue.includes(\"@\") &&\r\n      emailValue.includes(\".\") &&\r\n      pswdValue.length > 5 &&\r\n      confirmPswdValue === pswdValue\r\n    ) {\r\n      setEmailValid(false);\r\n      setPswdValid(false);\r\n      setConfirmValid(false);\r\n\r\n      const response = await fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB7_MYIxXslBhdwbwg4vFCvLqF4rsOW3_o\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            email: emailValue,\r\n            password: confirmPswdValue,\r\n            returnSecureToken: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        console.log(data.email);\r\n        emailRef.current.value = \"\";\r\n        pswdRef.current.value = \"\";\r\n        confirmPswdRef.current.value = \"\";\r\n        history.replace(\"/signIn\");\r\n      } else {\r\n        alert(data.error.message);\r\n      }\r\n    } else {\r\n      if (!emailValue.includes(\"@\") || !emailValue.includes(\".\")) {\r\n        setEmailValid(true);\r\n      }\r\n      if (pswdValue.length < 5) {\r\n        setPswdValid(true);\r\n      }\r\n      if (confirmPswdValue !== pswdValue) {\r\n        setConfirmValid(true);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Form onSubmit={signUpSubmitHandler} className={classes.signUp}>\r\n      <div>\r\n        <h3>Sign Up</h3>\r\n      </div>\r\n      <div>\r\n        <input\r\n          id=\"emailId\"\r\n          placeholder=\"Email\"\r\n          type=\"text\"\r\n          ref={emailRef}\r\n        ></input>\r\n        {emailValid && <p>Please Enter Valid Email</p>}\r\n        <input\r\n          id=\"passwordId\"\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          ref={pswdRef}\r\n        />\r\n        {pswdValid && <p>Please Enter Valid Password</p>}\r\n        <input\r\n          id=\"confirmPwdId\"\r\n          placeholder=\"Confirm Password\"\r\n          type=\"password\"\r\n          ref={confirmPswdRef}\r\n        />\r\n        {confirmValid && <p>Please Match the Password</p>}\r\n      </div>\r\n      <Button>Sign Up</Button>\r\n    </Form>\r\n  );\r\n};\r\nexport default SignUp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}